define(["hogan","text"],function(hogan,text){function load(name,req,onLoad,config){var hgnConfig=config.hgn||{},fileName=name;fileName+=hgnConfig&&hgnConfig.templateExtension!=null?hgnConfig.templateExtension:DEFAULT_EXTENSION,text.get(req.toUrl(fileName),function(data){var compilationOptions=hgnConfig.compilationOptions?mixIn({},hgnConfig.compilationOptions):{};config.isBuild&&(compilationOptions.asString=!0,_buildMap[name]=hogan.compile(data,compilationOptions));var template=hogan.compile(data,compilationOptions),render=bind(template.render,template);render.text=template.text,onLoad(render)})}function bind(fn,context){return function(){return fn.apply(context,arguments)}}function mixIn(target,source){var key;for(key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key]);return target}function write(pluginName,moduleName,writeModule){if(moduleName in _buildMap){_buildTemplate||(_buildTemplate=hogan.compile(_buildTemplateText));var fn=_buildMap[moduleName];writeModule(_buildTemplate.render({pluginName:pluginName,moduleName:moduleName,fn:fn}))}}var DEFAULT_EXTENSION=".mustache",_buildMap={},_buildTemplateText='define("{{pluginName}}!{{moduleName}}", ["hogan"], function(hogan){  var tmpl = new hogan.Template({{{fn}}}, "", hogan);  return function(){ return tmpl.render.apply(tmpl, arguments); };});\n',_buildTemplate;return{load:load,write:write}})