define(["require","exports","module","api/yql","api/parser","modal/module"],function(require,exports){function ModuleList(name,options){this.name=name,this.list=[],defaults.prefix=this.name+":",this.options=$.extend({},defaults,options)}function _fetch(modCode,callback){yql.requestModule(modCode,function(result){var mod=parser.parse(result);mod!==null&&(mod.isAvailable?callback(new Module(mod)):window.alert("module : "+modCode+" is not available"))})}var yql=require("api/yql"),parser=require("api/parser"),Module=require("modal/module"),defaults={mute:!1,prefix:"module:"};return ModuleList.fn=ModuleList.prototype,ModuleList.fn.find=function(mod){var i=0,len=this.list.length;for(;i<len;i++)if(this.list[i].isSame(mod))return i;return-1},ModuleList.fn.get=function(mod){return typeof mod=="number"&&mod>=0&&mod<this.list.length?this.list[mod]:typeof mod=="string"||typeof mod=="object"?this.get(this.find(mod)):null},ModuleList.fn.add=function(module,options){options=$.extend({},this.options,options),this.find(module)===-1?typeof module=="object"?this._add(module,options):typeof module=="string"&&_fetch(module,$.proxy(function(m){this._add(m,options)},this)):options.mute||$.publish(options.prefix+"addOne:duplicated",module)},ModuleList.fn._add=function(module,options){module.set("list",this.name),this.list.push(module),options.mute||$.publish(options.prefix+"addOne",[module])},ModuleList.fn.detail=function(modCode){var module=this.get(modCode);return module?module.format():null},ModuleList.fn.remove=function(mod,options){var module;return options=$.extend({},this.options,options),typeof mod=="number"&&mod>=0&&mod<this.list.length?(module=this.list.splice(mod,1)[0],options.mute||$.publish(options.prefix+"removeOne",[mod,module]),module):typeof mod=="string"||typeof mod=="object"?this.remove(this.find(mod),options):null},ModuleList.fn.clean=function(options){options=$.extend({},this.options,options),this.list=[],options.mute||$.publish(options.prefix+"clean")},ModuleList.fn.length=function(){return this.list.length},ModuleList.fn.sort=function(compareFun){this.list.sort(compareFun)},ModuleList})